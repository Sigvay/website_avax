# Generated by Django 4.1.3 on 2022-12-11 17:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mailing', models.BooleanField(default=True, help_text='Будет ли получать пользователь сообщения с рекламой', verbose_name='Рассылка уведомлений')),
                ('shipping', models.BooleanField(default=False, help_text='Установите флажок если пользователю часто отправляюттранспортными компаниями', verbose_name='Отправки ТК')),
                ('exctended_profile', models.BooleanField(default=False, help_text='Установите флажок если пользователю нужно предоставить доступ к закупкам в ОАЭ', verbose_name='Расширенный профиль')),
                ('deny_access', models.BooleanField(default=False, help_text='Запрещает пользователю использовать приложение', verbose_name='Запретить доступ')),
                ('id_telegram', models.CharField(blank=True, max_length=50, verbose_name='id_telegram')),
                ('phone', models.CharField(blank=True, max_length=15, verbose_name='Телефон')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='Город')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': '1. Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Текс запроса')),
                ('date_query', models.DateTimeField(verbose_name='Дата запроса')),
                ('available', models.CharField(max_length=10, verbose_name='В наличии')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'Запрос пользователя',
                'verbose_name_plural': '2. Запросы пользователей',
            },
        ),
    ]
